spring:
  application:
    name: s1s2-monitoring

  datasource:
    url: jdbc:postgresql://localhost:5433/s1-database
    username: postgres
    password: potteri1972
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 1

  kafka:
    bootstrap-servers: 109.73.202.251:31493
    consumer:
      group-id: s1s2-replay-1
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      ack-mode: BATCH
      concurrency: 2

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    org.apache.kafka: INFO
    org.springframework.kafka: INFO
    com.zaxxer.hikari: INFO
    org.apache.catalina: INFO
    com.example.monitoring: DEBUG

# ------------------- app settings -------------------
app:
  timezone: "Europe/Warsaw"
  days-lookback: 7
  sigma-r-min: 0.000001
  c-sigma: 3.0

  kafka:
    bootstrap: 109.73.202.251:31493
    group-id: s1s2-manual-reader

    topics:
      minute:
        hvs: "HVS_MINUTE"
        gvs: "GVS_MINUTE"
      hour:
        hvs: "HVS_RAW_DATA"
        gvs: "ODPU_RAW_DATA"
      out:
        alerts: "alerts.stat"
        timeline: "timeline.stat"
        rules: "rule.params"
        models: "models.events"

  file:
    messages: logs/kafka-messages.log
