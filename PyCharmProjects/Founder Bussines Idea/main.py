#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from typing import Any, Dict, Tuple, Optional, Sequence, Union
from tabulate import tabulate

# –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Å–≤–æ—é –æ–±—ë—Ä—Ç–∫—É –±—Ä–∞—É–∑–µ—Ä–∞ ‚Äî –æ–Ω–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è –¥–ª—è —Ä—É—á–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
# from anti_bot.anti_bot_browser import AntiBotBrowser

# —Ç–≤–æ–∏ —Å–µ—Ä–≤–∏—Å—ã
from services.google_trends_listing_service import GoogleTrendsListingService
from services.google_trends_explore_service import GoogleTrendsExploreService


Result = Union[Dict[str, Any], Tuple[Dict[str, Any], Any]]


def _unpack(result: Result) -> Tuple[Dict[str, Any], Optional[Any]]:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–µ—Ä–≤–∏—Å–∞:
      - dict -> (dict, None)
      - (dict, tap) -> (dict, tap)
    """
    if isinstance(result, tuple) and len(result) >= 1 and isinstance(result[0], dict):
        data = result[0]
        tap = result[1] if len(result) > 1 else None
        return data, tap
    if isinstance(result, dict):
        return result, None
    raise TypeError("Service returned unexpected result type; expected dict or (dict, tap) tuple.")


def show_listing_trends(enable_sniffer: bool = True) -> None:
    print("=== üìä Google Trends: –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã ===")
    service = GoogleTrendsListingService()
    result = service.get_trending_table(enable_sniffer=enable_sniffer)
    data, tap = _unpack(result)

    if not data:
        print("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–º —Ç—Ä–µ–Ω–¥–∞–º.")
        return

    # –û–∂–∏–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ (list[Sequence]) ‚Äî –ø–æ–¥–≥–æ–Ω–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø–æ–¥ —Å–≤–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    headers = [
        "–¢–µ–º–∞",
        "–ó–∞–ø—Ä–æ—Å–æ–≤",
        "–î–ª–∏–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
        "–ù–∞—á–∞–ª–æ",
        "–†–æ—Å—Ç (abs)",
        "–†–æ—Å—Ç (%)",
        "–°–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ —Ç—Ä–µ–Ω–¥–∞",
    ]
    try:
        print(tabulate(data, headers=headers, tablefmt="grid"))
    except Exception:
        # –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è, –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–µ–¥–µ–º –∫–∞–∫ –µ—Å—Ç—å
        print(data)

    if tap:
        print("\n[sniffer] –∞–∫—Ç–∏–≤–µ–Ω ‚Äî —Å—ã—Ä—ã–µ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ —Ñ–∞–π–ª—ã –ª–µ–∂–∞—Ç –≤ tap_out/")


def show_explore_data(
    explore_url: str,
    enable_sniffer: bool = True,
    headless: bool = True,
) -> None:
    print("\n=== üîç Google Trends: –û–±–∑–æ—Ä –∑–∞–ø—Ä–æ—Å–∞ (explore) ===")
    service = GoogleTrendsExploreService(url=explore_url, headless=headless)

    result: Result = service.get_explore_data(enable_sniffer=enable_sniffer)
    data, tap = _unpack(result)

    ts = data.get("popularity_timeseries") or []
    regions = data.get("regions") or []
    topics = data.get("topics") or []
    related = data.get("related_queries") or []

    print("\n –î–∏–Ω–∞–º–∏–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ (—Ç–æ—á–µ–∫):", len(ts))
    if ts:
        # –ø–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ 10
        print(ts[:10], "...")

    if regions:
        print("\n –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –ø–æ —Å—É–±—Ä–µ–≥–∏–æ–Ω–∞–º:")
        try:
            print(tabulate(regions, headers=["–†–µ–≥–∏–æ–Ω", "–†–µ–π—Ç–∏–Ω–≥"], tablefmt="grid"))
        except Exception:
            print(regions)

    if topics:
        print("\n –ï—â—ë –ø–æ —Ç–µ–º–µ:")
        try:
            print(tabulate(topics, headers=["–¢–µ–º–∞", "–†–æ—Å—Ç"], tablefmt="grid"))
        except Exception:
            print(topics)

    if related:
        print("\n –ü–æ—Ö–æ–∂–∏–µ –∑–∞–ø—Ä–æ—Å—ã:")
        try:
            print(tabulate(related, headers=["–ó–∞–ø—Ä–æ—Å", "–†–æ—Å—Ç"], tablefmt="grid"))
        except Exception:
            print(related)

    if tap:
        print("\n[sniffer] –∞–∫—Ç–∏–≤–µ–Ω ‚Äî —Å–º–æ—Ç—Ä–∏—Ç–µ tap_out/ –¥–ª—è raw, .split/, _structured/ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö.")


if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä explore: —Ç–µ–º–∞ ¬´Obsidian¬ª (–≥–ª–æ–±–∞–ª—å–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å). –ü–æ–º–µ–Ω—è–π q/geo/hl –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã.
    # q –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏ —Å—Ç—Ä–æ–∫—É –∑–∞–ø—Ä–æ—Å–∞, –∏ G-Entity (–∫–∞–∫ /g/11n007kbcy)
    explore_url = "https://trends.google.com/trends/explore?geo=US&q=%2Fg%2F11n007kbcy&hl=ru"

    # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî –º–æ–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã:
    # show_listing_trends(enable_sniffer=True)

    show_explore_data(
        explore_url=explore_url,
        enable_sniffer=True,   # –ø—Ä–∏ True —Å–µ—Ä–≤–∏—Å –≤–µ—Ä–Ω—ë—Ç (data, tap); –ø—Ä–∏ False ‚Äî —Ç–æ–ª—å–∫–æ data
        headless=True,         # –≤—ã—Å—Ç–∞–≤–∏ False, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å –±—Ä–∞—É–∑–µ—Ä
    )

    # –ü—Ä–∏–º–µ—Ä —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–Ω—Ç–∏–±–æ—Ç–∞:
    # with AntiBotBrowser(headless=False) as bot:
    #     bot.goto("https://bot.sannysoft.com/")
    #     bot.wait_until_closed()
